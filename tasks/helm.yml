---
- name: Verify Helm binary
  ansible.builtin.stat:
    path: "{{ kubetools_helm_bin_path }}"
  register: helm_binary

- name: Verify Helm version
  ansible.builtin.command: "{{ kubetools_helm_bin_path }} version"
  failed_when: false
  changed_when: false
  register: helm_version

- name: Download Helm archive
  ansible.builtin.get_url:
    url: "{{ kubetools_helm_dl_url }}"
    dest: /tmp/helm.tar.gz
    mode: u=rw,g=rw,o=r
    owner: "{{ kubetools_user_id }}"
    group: "{{ kubetools_group_id }}"
  register: helm_downloaded
  when: not helm_binary.stat.exists or kubetools_helm_version not in helm_version.stdout

- name: Extract Helm
  ansible.builtin.unarchive:
    remote_src: yes
    src: /tmp/helm.tar.gz
    dest: "{{ kubetools_bin_path }}"
    extra_opts: [--strip-components=1]
    mode: u=rwx,g=rx,o=rx
    owner: "{{ kubetools_user_id }}"
    group: "{{ kubetools_group_id }}"
  when: ansible_system == 'Linux' and helm_downloaded is changed

# Because gnu-tar isn't found in path on remote Mac systems in non-interactive shell, use cmd to extract instead
- name: Extract Helm with shell
  ansible.builtin.shell: |
    gtar --strip-components=1 -xvf /tmp/helm.tar.gz -C {{ kubetools_bin_path }}
    chown {{ kubetools_user_id }}:{{ kubetools_group_id }} {{ kubetools_bin_path }}
    # mode: u=rwx,g=rx,o=rx
  changed_when: False
  when: ansible_system == 'Darwin' and helm_downloaded is changed
