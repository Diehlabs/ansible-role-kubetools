---
- name: Ensure rc files exist
  ansible.builtin.file:
    state: touch
    mode: u=rw,g=rw,o=r
    owner: "{{ kctl_user_id }}"
    group: "{{ kctl_user_id }}"
    path: "{{ item }}"
    access_time: preserve
    modification_time: preserve
  loop:
    - "/Users/{{ kctl_user_id }}/.bashrc"
    - "/Users/{{ kctl_user_id }}/.zshrc.local"
    - "/Users/{{ kctl_user_id }}/.vimrc"

- name: Download kubectl binary (OSX amd64)
  ansible.builtin.get_url:
    url: "{{ kubectl_dl_url }}"
    dest: /usr/local/bin/kubectl
    mode: u=rwx,g=rx,o=rx
    owner: "{{ kctl_user_id }}"
    group: "{{ kctl_group_id }}"

- name: Download helm binary (OSX amd64)
  ansible.builtin.get_url:
    url: "{{ helm.dl_url }}"
    dest: /usr/local/bin/
    mode: u=rwx,g=rx,o=rx
    owner: "{{ kctl_user_id }}"
    group: "{{ kctl_group_id }}"

- name: Configure kubectl completion for bash
  ansible.builtin.lineinfile:
    path: "/Users/{{ kctl_user_id }}/.bashrc"
    # insertbefore: BOF
    line: "{{ item }}"
  loop:
    - 'source <(kubectl completion bash)'
    - 'alias k=kubectl'
    - 'complete -F __start_kubectl k'

- name: Configure kubectl completion for zshell
  ansible.builtin.lineinfile:
    path: "/Users/{{ kctl_user_id }}/.zshrc.local"
    line: "{{ item }}"
  loop:
    - 'alias k=kubectl'
    - '[[ $commands[kubectl] ]] && source <(kubectl completion zsh)'
    - 'export do="-o yaml --dry-run=client"'
  when: kctl_shell_type == 'zsh'

- name: Configure vimrc for kube usage
  ansible.builtin.lineinfile:
    path: "/Users/{{ kctl_user_id }}/.vimrc"
    line: "{{ item }}"
  loop:
    - 'set expandtab'
    - 'set tabstop=2'
    - 'set shiftwidth=2'
